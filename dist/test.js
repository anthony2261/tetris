!function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=1)}([function(t,e,n){"use strict";n.d(e,"a",function(){return i});const r=document.body;class i{constructor({x:t,y:e,color:n,unit:r}){this.x=t,this.y=e,this.color=n,this.unit=r}get simulateLeft(){return{x:this.x-1,y:this.y}}get simulateRight(){return{x:this.x+1,y:this.y}}get simulateDown(){return{x:this.x,y:this.y+1}}get left(){return this.x}transparent(){this.element.style.opacity="0.2"}opaque(){this.element.style.opacity="1"}draw(){let t=document.createElement("div");t.setAttribute("class",`block ${this.color}`),t.style.left=`${this.x*this.unit}px`,t.style.top=`${this.y*this.unit}px`,t.style.width=`${this.unit}px`,t.style.height=`${this.unit}px`,r.appendChild(t),this.element=t}undraw(){this.element.parentNode.removeChild(this.element)}}},function(t,e,n){"use strict";n.r(e);var r=n(0);QUnit.test("simulates-movement-correctly",function(t){let e=new r.a({x:1,y:1,color:"red",unit:20});t.deepEqual(e.simulateLeft,{x:0,y:1},"simulate left correctly")})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,